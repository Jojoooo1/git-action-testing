name: CI

on: [pull_request, push]

env:
  SKIP_CI: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"

jobs:
  dump-info:
    runs-on: ubuntu-latest
    # Dont need it since the git push is done with GITHUB_TOKEN
    if: "! $SKIP_CI"
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  commit:
    runs-on: ubuntu-latest
    needs: dump-info # Needs to be terminated because master can only be merge with dump-info
    # will triggered after pull request merge
    if:  github.event_name == 'push' && contains(github.ref, 'master') && "! $SKIP_CI"
    steps:
      - uses: actions/checkout@v2

      - name: Output $SOURCE_BRANCH
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF##*/}
      - name: echo $SOURCE_BRANCH
        run: |
          echo $SOURCE_BRANCH
        env:
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}

      # GITHUB_TOKEN => will not create a new workflow run (to prevent recursive flow)
      - name: Git force push
        run: |
          touch test.sh
          git config --global user.name ${{ github.actor }}
          git config --global user.email ${{ github.actor }}@users.noreply.github.com
          git add .
          git commit -m "force pushed [skip-ci]"
          echo "Pushing to ${{ steps.branch_name.outputs.SOURCE_BRANCH }}"
          git push --force origin ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
